OnTranslate
{
	_talk = reference0
	
	//This is what makes %(embedded_elements) work in script input
	if reference1 == "" && reference2 == "" //If this is from the input box
	{ //send input box : no event (ref2) , no special flag (ref1)
		_talk = EVAL('"' + REPLACE(_talk,'"','""') + '"')
	}
	
	_bloon = 0
	case CurrentColor
	{
		when "Red"; _bloon = 1
		when "Green"; _bloon = 2
		when "Black"; _bloon = 3
		when "Purple"; _bloon = 4
	}
	
	if SHIORI3FW.BalloonName == "Noodloon"
	{
		_talk = REPLACE(_talk,"\0\b[0]","\0\b[%(_bloon)0]")
		_talk = REPLACE(_talk,"\0\b[2]","\0\b[%(_bloon)2]")
		_talk = REPLACE(_talk,"\0\b[4]","\0\b[%(_bloon)4]")
	}
	
	TOSTR(_talk)
}

OnTranslateInternal.AutoPauses
{
	_talk = _argv[0]
	
	if "\![no-autopause]" !_in_ _talk
	{
		/*
		//Additional options if you want ellipsis to have little pauses between each dot. Personally, I think I want to do that manually, for when I want a particular flavor.
		
		_talk = REPLACE(_talk,"... ",".\w2.\w2.\w8 ") //Ellipsis
		_talk = REPLACE(_talk,"..? ",".\w2.\w2?\w8 ") //Question mark + ellipsis
		_talk = REPLACE(_talk,"..! ",".\w2.\w2!\w8 ") //Exclamation point + ellipsis
		*/
		
		_talk = REPLACE(_talk,", ",",\w4 ") //Comma
		_talk = REPLACE(_talk,". ",".\w8 ") //Period
		_talk = REPLACE(_talk,"? ","?\w8 ") //Question mark
		_talk = REPLACE(_talk,"! ","!\w8 ") //Exclamation point
		//_talk = REPLACE(_talk,"- ","-\w8 ") //Dash - This one seems to happen a lot when I don't want it, so I am commenting it out
		_talk = REPLACE(_talk,"~ ","~\w8 ") //Tilde
		_talk = REPLACE(_talk,"; ",";\w4 ") //Semicolon
		_talk = REPLACE(_talk,": ",";\w8 ") //Colon
	}
	
	_talk
}

OnAiTalk
{
	if CHAIN.IDName == ""
	{
		LastTalk = RandomTalk
	}
	else
	{
		LastTalk = ChainTalk
	}
	LastTalk
}


//This is just here so you can use anchors to link to websites if you want. You can link to websites with normal menu choice tags! If you do, a handy URL preview will show up in the balloon!
OnAnchorSelect
{
	if "http://" _in_ reference0 || "https://" _in_ reference0; "\j[""%(reference0)""]"
}

//Hotkeys
// OnKeyPress
// {
	// if reference0 == "f1"; "\![open,readme]"
	// elseif reference0 == "t"; OnAiTalk
	// elseif reference0 == "r"; OnLastTalk
// }

//Happens about 30 seconds after a script ends, by default, to bring them back to normal poses
OnSurfaceRestore
{
	"\1\s[-1]\0\s[0]"
}

//Happens when the ghost is unminimized. You *can* include dialogue, but you don't *have* to. I have included this event because if you don't, it defaults to \0\s[0]\1\s[10], which you don't want in some cases, such as if your ghost uses different surfaces or has a different number of characters.
OnWindowStateRestore
{
	"\1\s[-1]\0\s[0]"
}

On_homeurl
{
	"https://raw.githubusercontent.com/Zichqec/noodle/main/"
}


//—————————————————————————————— Right click menu links ——————————————————————————————

//Takes an array of alternating names and urls, and formats them for use with the right click menu
FormatLinks : all
{
	for _i = 0; _i < ARRAYSIZE(_argv); _i++
	{
		_argv[_i] //Add the link/title
		//Alternate between adding %ASC(1) or %ASC(2)
		if _i % 2 == 1; "%ASC(2)"
		else; "%ASC(1)"
	}
}
/*
On_sakura.recommendsites
{
	FormatLinks(recommendsites_sakura)
}

//These are the websites linked in the top option of the sakura's right click menu. The format is simple; write the label of the link on the left followed by a semicolon, and then on the right, the url to link to. These should be separate strings.
recommendsites_sakura : array
{
	"Link label";	"https://link.example.com/link/to/whatever/here/"
}

On_sakura.portalsites 
{
	FormatLinks(portalsites_sakura)
}

//These are the websites linked in the second option of the sakura's right click menu. Same as above
portalsites_sakura : array
{
	"Another link label";	"https://link.example.com/link/to/whatever/here/again/"
	"A third link label";	"https://link.example.com/link/to/whatever/a/third/time/you/can/add/as/many/as/you/want/"
}
*/

//—————————————————————————————— User pronoun related ——————————————————————————————

they
{
	if SHIORI3FW.UserSex == "male"; "he"
	elseif SHIORI3FW.UserSex == "female"; "she"
	else; "they"
}

them
{
	if SHIORI3FW.UserSex == "male"; "him"
	elseif SHIORI3FW.UserSex == "female"; "her"
	else; "them"
}

their
{
	if SHIORI3FW.UserSex == "male"; "his"
	elseif SHIORI3FW.UserSex == "female"; "her"
	else; "their"
}

theirs
{
	if SHIORI3FW.UserSex == "male"; "his"
	elseif SHIORI3FW.UserSex == "female"; "hers"
	else; "theirs"
}

themself
{
	if SHIORI3FW.UserSex == "male"; "himself"
	elseif SHIORI3FW.UserSex == "female"; "herself"
	else; "themself"
}

//%(they) %(p('are','is'))
//You can change the name of this function if you want! I kept it short so it's fast to type
p
{
	if SHIORI3FW.UserSex == "undef"; _argv[0] //they are
	else; _argv[1] //he is/she is
}

/*

An example of the above setup:
"%(they) %(p('were','was')) looking for that earlier, I'll ask if %(they)'%('ve','s') found it."

If using they, the %(p) functions will return the first word specified, resulting in:
"they were looking for that earlier, I'll ask if they've found it."

If not using they, for example if using she, it will return the second specified word instead, resulting in:
"she was looking for that earlier, I'll ask if she's found it."

With this function, you can quickly customize words that need to change based on whether it should be singular or plural. Just remember; the %(p) function is set up so that the first word you specify matches with the 'they' labels used on the pronoun functions. You can always switch that around if you like, too.

*/

//Copied from the base SHIORI files, but with the username variable added
OnNotifyUserInfo : void
{
	SHIORI3FW.UserName = reference[0]
	username = reference[0]
	SHIORI3FW.UserNameFull = reference[1]
	SHIORI3FW.UserBirthday = SPLIT(reference[2],',',3)
	for _i = 0 ; _i < 3 ; _i++ {
		SHIORI3FW.UserBirthday[_i] = TOINT(SHIORI3FW.UserBirthday[_i])
	}
	SHIORI3FW.UserSex = reference[3]
}

OnNotifyDressupInfo
{
	CurrentColor = ""
	//character ID, category name, part name, option, on-1/off-0, thumbnail path
	foreach reference; _ref
	{
		if _ref[4,C_BYTE1] == "1"
		{
			CurrentColor = _ref[2,C_BYTE1]
			break
		}
	}
}

br
{
	if SHIORI3FW.BalloonName == "Noodloon"; "\n"
	else; " "
}

//Written by Zichqec https://zichqec.github.io/s-the-skeleton/
//This code automates adding simple information to SSP's AI graph, for if you want a simple count of things like your number of randomtalks, the number of entries in an envelope, etc.
//The AI graph can do a lot more besides just this! Read up about it on Ukadoc here: https://ukagakadreamteam.github.io/ukadoc/manual/list_shiori_resource.html#getaistateex
//Note: if things are set up wrong, opening the AI graph may cause SSP to crash. Just be a little cautious and make sure you follow the instructions.
On_getaistateex : all
{
	_graph = AI_Graphs[reference0]
	if _graph != ""
	{
		_items = SPLIT(_graph,",")
		for _i = 0; _i < ARRAYSIZE(_items); _i++
		{
			if _i > 0; ","
			OUTPUTNUM("%(_items[_i])")
		}
		C_BYTE1
		for _i = 0; _i < ARRAYSIZE(_items); _i++
		{
			if _i > 0; ","
			"%(_items[_i])"
		}
	}
}

//Each entry in this array is a new page that will be added to the AI Graph.
//You can add as many entries as you want pages
//You can add as many items to the entries as you want, just have at least 3 or SSP will crash when trying to load the graph
//Obviously, if you add too many, it will at some point become very overwhelming. You might try adding some sort of variables to control which options are output when
//Make sure you write the NAMES of the functions/envelopes you want it to count, NOT a function call like %(name)
AI_Graphs : array
{
	"RandomTalk,hidingspot,badhidingspot,bodypart,badenvironment,considered"
	"friend,fiend,pasta"
}

italic
{
	"\f[italic,1]"
}

italicoff
{
	"\f[italic,0]"
}

bold
{
	"\f[bold,1]"
}

boldoff
{
	"\f[bold,0]"
}

//Searches the start of a string for the requested substring.
//Argument 0 is the source string to search, argument 1 is the substring to search for.
//Returns 1 if true, 0 if false.
//Usage example:
//StartsWith("Testing","Test")
StartsWith
{
	SUBSTR(_argv[0],0,STRLEN(_argv[1])) == _argv[1]
}

//Searches the end of a string for the requested substring.
//Argument 0 is the source string to search, argument 1 is the substring to search for.
//Returns 1 if true, 0 if false.
//Usage example:
//EndsWith("Testing","ing")
EndsWith
{
	SUBSTR(_argv[0],STRLEN(_argv[0]) - STRLEN(_argv[1]),STRLEN(_argv[1])) == _argv[1]
}

OnNewTalkInterval
{
	LOGGING("reference: %(reference)")
	if reference0 == "special"
	{
		aitalkinterval = TOINT(reference1)
	}
	else
	{
		aitalkinterval = (RAND(780) + 1) + 120
	}
	LOGGING("NEW INTERVAL: %(aitalkinterval)")
}

big
{
	"\f[height,+2]"
}

small
{
	"\f[height,-2]"
}

regsize
{
	"\f[height,default]"
}